{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortBy","goodsFromServer","App","useState","goods","isStarted","setStart","isReversed","reverse","None","sortBy","setSortBy","length","setLength","visibleGoods","goodsArray","selectedLength","sortType","preparedList","filter","good","Name","sort","good1","good2","toLowerCase","localeCompare","Length","prepareList","className","type","onClick","name","value","onChange","event","target","map","ReactDOM","render","document","getElementById"],"mappings":"6KAgBKA,E,oDAbCC,EAA4B,CAChC,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGD,K,YAAAA,E,YAAAA,E,iBAAAA,M,KAML,IA8HeE,EA9HO,WACpB,MAAgBC,mBAAS,GAAD,OAAKF,IAAtBG,EAAP,oBACA,EAA8BD,oBAAS,GAAvC,mBAAOE,EAAP,KAAkBC,EAAlB,KACA,EAA8BH,oBAAS,GAAvC,mBAAOI,EAAP,KAAmBC,EAAnB,KACA,EAA4BL,mBAASH,EAAOS,MAA5C,mBAAOC,EAAP,KAAeC,EAAf,KACA,EAA4BR,mBAAS,GAArC,mBAAOS,EAAP,KAAeC,EAAf,KAkCMC,EAhCc,SAClBC,EACAC,EACAC,GAEA,IAAMC,EAAe,YAAIH,GAAYI,QAAO,SAAAC,GAAI,OAC9CA,EAAKR,QAAUI,KAEjB,OAAQC,GACN,KAAKjB,EAAOqB,KACVH,EAAaI,MAAK,SAACC,EAAOC,GAAR,OACfD,EAAME,cAAeC,cAAcF,EAAMC,kBAE5C,MAEF,KAAKzB,EAAO2B,OACVT,EAAaI,MAAK,SAACC,EAAOC,GAAR,OAChBD,EAAMX,OAASY,EAAMZ,UAY3B,OAJIL,GACFW,EAAaV,UAGRU,EAGYU,CAAYxB,EAAOQ,EAAQF,GAEhD,OACE,sBAAKmB,UAAU,gDAAf,UACE,oBAAIA,UAAU,aAAd,oBACExB,GACA,wBACEyB,KAAK,SACLD,UAAU,oBACVE,QAAS,kBAAMzB,GAAS,IAH1B,mBASDD,GACC,sBAAKwB,UAAU,OAAf,UACE,sBAAKA,UAAU,yCAAf,UACE,wBACEC,KAAK,SACLD,UAAU,sBACVE,QAAS,kBAAMvB,GAASD,IAH1B,qBAQA,wBACEuB,KAAK,SACLD,UAAU,sBACVE,QAAS,kBAAMpB,EAAUX,EAAOqB,OAHlC,iCAQA,wBACES,KAAK,SACLD,UAAU,sBACVE,QAAS,kBAAMpB,EAAUX,EAAO2B,SAHlC,4BAQA,wBACEG,KAAK,SACLD,UAAU,sBACVE,QAAS,WACPvB,GAAQ,GACRG,EAAUX,EAAOS,MACjBI,EAAU,IANd,mBAYA,yBACEmB,KAAK,SACLC,MAAOrB,EACPsB,SAAU,SAACC,GAAD,OAAWtB,GAAWsB,EAAMC,OAAOH,QAH/C,UAKE,wBAAQA,MAAM,IAAd,eACA,wBAAQA,MAAM,IAAd,eACA,wBAAQA,MAAM,IAAd,eACA,wBAAQA,MAAM,IAAd,eACA,wBAAQA,MAAM,IAAd,eACA,wBAAQA,MAAM,IAAd,eACA,wBAAQA,MAAM,IAAd,eACA,wBAAQA,MAAM,IAAd,eACA,wBAAQA,MAAM,IAAd,eACA,wBAAQA,MAAM,KAAd,sBAIJ,oBAAIJ,UAAU,aAAd,yBAEA,6BACGf,EAAauB,KAAI,SAAAjB,GAAI,OACpB,oBAAeS,UAAU,YAAzB,SACGT,GADMA,eCtIvBkB,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.2a808d4f.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport './App.css';\n\nconst goodsFromServer: string[] = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortBy {\n  None = 'none',\n  Name = 'name',\n  Length = 'length',\n}\n\nconst App: React.FC = () => {\n  const [goods] = useState([...goodsFromServer]);\n  const [isStarted, setStart] = useState(false);\n  const [isReversed, reverse] = useState(false);\n  const [sortBy, setSortBy] = useState(SortBy.None);\n  const [length, setLength] = useState(1);\n\n  const prepareList = (\n    goodsArray: string[],\n    selectedLength: number,\n    sortType: string,\n  ) => {\n    const preparedList = [...goodsArray].filter(good => (\n      good.length >= selectedLength));\n\n    switch (sortType) {\n      case SortBy.Name:\n        preparedList.sort((good1, good2) => (\n          (good1.toLowerCase()).localeCompare(good2.toLowerCase())\n        ));\n        break;\n\n      case SortBy.Length:\n        preparedList.sort((good1, good2) => (\n          good1.length - good2.length\n        ));\n        break;\n\n      default:\n        break;\n    }\n\n    if (isReversed) {\n      preparedList.reverse();\n    }\n\n    return preparedList;\n  };\n\n  const visibleGoods = prepareList(goods, length, sortBy);\n\n  return (\n    <div className=\"App container.is-widescreen has-text-centered\">\n      <h1 className=\"title is-1\">Goods</h1>\n      {!isStarted && (\n        <button\n          type=\"button\"\n          className=\"button is-success\"\n          onClick={() => setStart(true)}\n        >\n          Start\n        </button>\n      )}\n\n      {isStarted && (\n        <div className=\"mt-6\">\n          <div className=\"is-flex is-justify-content-center mt-5\">\n            <button\n              type=\"button\"\n              className=\"button is-info mx-4\"\n              onClick={() => reverse(!isReversed)}\n            >\n              Reverse\n            </button>\n\n            <button\n              type=\"button\"\n              className=\"button is-info mx-4\"\n              onClick={() => setSortBy(SortBy.Name)}\n            >\n              Sort alphabetically\n            </button>\n\n            <button\n              type=\"button\"\n              className=\"button is-info mx-4\"\n              onClick={() => setSortBy(SortBy.Length)}\n            >\n              Sort by length\n            </button>\n\n            <button\n              type=\"button\"\n              className=\"button is-info mx-4\"\n              onClick={() => {\n                reverse(false);\n                setSortBy(SortBy.None);\n                setLength(1);\n              }}\n            >\n              Reset\n            </button>\n\n            <select\n              name=\"length\"\n              value={length}\n              onChange={(event) => setLength(+event.target.value)}\n            >\n              <option value=\"1\">1</option>\n              <option value=\"2\">2</option>\n              <option value=\"3\">3</option>\n              <option value=\"4\">4</option>\n              <option value=\"5\">5</option>\n              <option value=\"6\">6</option>\n              <option value=\"7\">7</option>\n              <option value=\"8\">8</option>\n              <option value=\"9\">9</option>\n              <option value=\"10\">10</option>\n            </select>\n          </div>\n\n          <h2 className=\"title is-2\">Goods List:</h2>\n\n          <ul>\n            {visibleGoods.map(good => (\n              <li key={good} className=\"is-size-4\">\n                {good}\n              </li>\n            ))}\n          </ul>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}